apiVersion: apps/v1
kind: Deployment
metadata:
  # labels:
  #   label: kairos-webserver
  name: kairos-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      label: kairos-webserver
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        label: kairos-webserver
    spec:
      initContainers:
        - name: init-cont
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{.Values.database.serviceName}} 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
        - image: "{{ .Values.image }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          name: kairos-webserver
          envFrom:
            - configMapRef:
                name: kairos-webserver-env
            - secretRef:
                name: kairos-secrets
          ports:
            - containerPort: 80
          tty: true
          volumeMounts:
            - mountPath: /var/www/html/storage/app
              name: kairos-webserver-claim
          resources:
            requests:
              ephemeral-storage: "100Mi"
      restartPolicy: Always
      volumes:
        - name: kairos-webserver-claim
          persistentVolumeClaim:
            claimName: kairos-webserver-claim
status: {}
