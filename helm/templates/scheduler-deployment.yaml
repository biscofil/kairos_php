apiVersion: apps/v1
kind: Deployment
metadata:
  name: kairos-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kairos-scheduler
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: kairos-scheduler
    spec:
      initContainers:
      - name: init-cont
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{.Values.database.serviceName}} 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
      - image: "{{ .Values.image }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: Always
        name: kairos-scheduler
        envFrom:
          - configMapRef:
              name: kairos-webserver-env
          - secretRef:
              name: kairos-secrets
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              while true; do php artisan schedule:run --verbose --no-interaction; sleep 5; done
      restartPolicy: Always
      volumes:
        - name: kairos-webserver-claim
          persistentVolumeClaim:
            claimName: kairos-webserver-claim